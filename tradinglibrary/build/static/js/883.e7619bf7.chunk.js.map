{"version":3,"file":"static/js/883.e7619bf7.chunk.js","mappings":"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","sources":["../node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as raf } from './helpers.js';\nimport { w as win } from './index6.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n  keyframes.forEach((keyframe) => {\n    for (const key in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        }\n        else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = { passive: true };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes\n    .map((keyframe) => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  })\n    .join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n  // getRootNode is not always available in SSR environments.\n  // TODO(FW-2832): types\n  const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n  return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  var _a;\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\n\nconst createAnimation = (animationId) => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  let paused = false;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\n    (win !== undefined && typeof win.AnimationEffect === 'function');\n  const supportsWebAnimations = typeof Element === 'function' &&\n    typeof Element.prototype.animate === 'function' &&\n    supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = (clearStyleSheets) => {\n    childAnimations.forEach((childAnimation) => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = (clearStyleSheets) => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n    paused = false;\n  };\n  const isRunning = () => {\n    return numAnimationsRunning !== 0 && !paused;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach((animation) => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    }\n    else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach((element) => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach((stylesheet) => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = (readFn) => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = (writeFn) => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = (readFn) => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = (writeFn) => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = (className) => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = (className) => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = (className) => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = (className) => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = (animationDirection) => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = (animationFill) => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = (animationDelay) => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = (animationEasing) => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = (animationDuration) => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = (animationIterations) => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = (animation) => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = (el) => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      }\n      else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      }\n      else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = (animationToAdd) => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      }\n      else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = (keyframeValues) => {\n    const different = _keyframes !== keyframeValues;\n    _keyframes = keyframeValues;\n    if (different) {\n      updateKeyframes(_keyframes);\n    }\n    return ani;\n  };\n  const updateKeyframes = (keyframeValues) => {\n    if (supportsWebAnimations) {\n      getWebAnimations().forEach((animation) => {\n        if (animation.effect.setKeyframes) {\n          animation.effect.setKeyframes(keyframeValues);\n        }\n        else {\n          const newEffect = new KeyframeEffect(animation.effect.target, keyframeValues, animation.effect.getTiming());\n          animation.effect = newEffect;\n        }\n      });\n    }\n    else {\n      initializeCSSAnimation();\n    }\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach((callback) => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach((callback) => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach((el) => {\n      const elementClassList = el.classList;\n      addClasses.forEach((c) => elementClassList.add(c));\n      removeClasses.forEach((c) => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach((callback) => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach((callback) => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach((el) => {\n      const elementClassList = el.classList;\n      addClasses.forEach((c) => elementClassList.add(c));\n      removeClasses.forEach((c) => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach((onFinishCallback) => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach((element) => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach((element) => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection(),\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      }\n      else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = (step) => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach((animation) => {\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    }\n    else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach((element) => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = (step) => {\n    webAnimations.forEach((animation) => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection(),\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach((element) => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach((animation) => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    }\n    else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach((animation) => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    update(false, true, step);\n    return ani;\n  };\n  const progressStep = (step) => {\n    childAnimations.forEach((animation) => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach((animation) => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      }\n      else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      }\n      else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true,\n      });\n      if (!parentAnimation) {\n        play();\n      }\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach((animation) => {\n          animation.pause();\n        });\n      }\n      else {\n        elements.forEach((element) => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n      paused = true;\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach((animation) => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach((element) => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n    else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach((element) => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach((animation) => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    }\n    else {\n      updateCSSAnimation();\n    }\n  };\n  const play = (opts) => {\n    return new Promise((resolve) => {\n      if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      onFinish(() => resolve(), { oneTimeCallback: true });\n      childAnimations.forEach((animation) => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      }\n      else {\n        playCSSAnimations();\n      }\n      paused = false;\n    });\n  };\n  const stop = () => {\n    childAnimations.forEach((animation) => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    }\n    else {\n      _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    }\n    else {\n      _keyframes = [..._keyframes, { offset: 1, [property]: value }];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return (ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    isRunning,\n    progressStart,\n    progressStep,\n    progressEnd,\n  });\n};\n\nexport { createAnimation as c };\n"],"names":["animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","createKeyframeStylesheet","keyframeName","_a","styleContainer","rootNode","getRootNode","head","getStyleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","parentAnimation","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","ani","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","willComplete","finished","shouldCalculateNumAnimations","paused","onFinishCallbacks","onFinishOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","win","supportsWebAnimations","Element","prototype","animate","getWebAnimations","cleanUp","clearStyleSheets","cleanUpElements","cleanUpStyleSheets","onFinish","callback","opts","oneTimeCallback","c","o","clearOnFinish","length","animation","cancel","elementsArray","slice","raf","parentNode","removeChild","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","updateKeyframes","keyframeValues","effect","setKeyframes","newEffect","KeyframeEffect","target","getTiming","initializeCSSAnimation","beforeAnimation","addClasses","removeClasses","styles","elementClassList","classList","add","remove","animationFinish","clearCSSAnimationsTimeout","currentStep","onFinishCallback","afterAnimation","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","delay","duration","easing","iterations","fill","direction","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","getComputedTiming","animationDuration","updateWebAnimation","updateTiming","updateCSSAnimation","update","deep","pauseAnimation","onAnimationEndFallback","clearTimeout","clearCSSAnimationPlayState","play","Promise","resolve","sync","animationDelay","animationIterations","isFinite","setTimeout","unRegTrans","passive","unregister","onTransitionEnd","ev","addEventListener","removeEventListener","animationEnd","playCSSAnimations","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue","parent","stop","destroy","childAnimation","different","addAnimation","animationToAdd","addElement","nodeType","i","console","error","animationFill","animationDirection","animationEasing","getKeyframes","afterAddRead","readFn","afterAddWrite","writeFn","afterClearStyles","propertyNames","afterStyles","afterRemoveClass","afterAddClass","beforeAddRead","beforeAddWrite","beforeClearStyles","beforeStyles","beforeRemoveClass","beforeAddClass","isRunning","progressStart","forceLinearEasing","progressStep","progressEnd","playTo","dur"],"sourceRoot":""}